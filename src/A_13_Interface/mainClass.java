package A_13_Interface;

public class mainClass {

    // 인터페이스
    // 인터페이스는 추상클래스와 비슷하지만, 추상성이 더욱 심화된 개념
    // 멤버변수는 모두 상수어야하고, 메서드는 모두 추상메서드 여야함.
    // 상수와 추상메서드로만 존재하여 더욱 완벽한 추상화를 제공

    // 상속이 아닌 인터페이스를 사용하는 이유
    // 논리적인 is a ~ 가 성립하지 않거나, 다중상속을 받고 싶은 경우
    // 상속 + 인터페이스 를 통해 다중상속과 유사하게 구현
    // 다중상속이 안됐던 이유는 변수의 중복을 막기 위함인데, 인터페이스는 변수명이 없으므로 가능함

    // static final을 함께 사용해서 변수를 상수로 만들어서 사용함
    // 변수의 static final과 메서드의 abstract 는 인터페이스에 필수이므로 생략가능(당연한 것으로 인식)
    
    // 인터페이스는 객체를 만들지 못함
    // 따라서 상속을 해서 자식을 만들어야하는데 이때 extends 가 아닌 implements를 사용
    
    // 인터페이스간의 상속은 가능함(이떈 extends)
    // 인터페이스간의 상속은 다중상속 가능
    
    public static void main(String args[]){
        Circle c1 = new Circle(1, 1, 1);
        c1.test1();
        c1.test2();
    }
}
